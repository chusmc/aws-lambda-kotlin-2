buildscript {
    ext.kotlin_version = '1.2.0-rc-39'

    repositories {
        maven {
            url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath "gradle.plugin.org.jmailen.gradle:kotlinter-gradle:1.5.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'groovy'
apply plugin: "org.jmailen.kotlinter"

compileKotlin {
    kotlinOptions {
        jvmTarget = 1.8
    }
}

kotlinter {
    ignoreFailures = true
    indentSize = 4
    reporters = ['checkstyle', 'plain']
}

compileGroovy.enabled = false

repositories {
    maven {
        url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2'
    }
    maven {
        url 'https://dl.bintray.com/kotlin/kotlinx/'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre8'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.1'

    compile 'javax.inject:javax.inject:1'

    compile ('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2') {
        exclude module: 'kotlin-reflect'
    }
    //compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.2'

    compile 'com.jayway.jsonpath:json-path:2.3.0'
    compile 'org.apache.commons:commons-jexl3:3.1'

    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:2.0.1'
    compile 'com.amazonaws:aws-java-sdk-kinesis:1.11.213'
    compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.213'

    compile 'io.projectreactor:reactor-core:3.1.1.RELEASE'

    runtime 'org.jetbrains.kotlin:kotlin-reflect'

    testCompile 'org.codehaus.groovy:groovy-all:2.4.12'
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"

    testRuntime 'org.slf4j:slf4j-simple:1.7.25'

}

apply plugin: 'jacoco'

jacoco {
   toolVersion = "0.7.9"
}

jacocoTestReport {
   group = "Reporting"

   description = "Generate Jacoco coverage reports after running tests."
   reports {
      xml {
         enabled true
         destination file("${buildDir}/reports/jacoco/jacoco.xml")
      }
      csv.enabled false
      html {
         enabled true
         destination file("${buildDir}/reports/jacoco/jacocoHtml")
      }
   }
   additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}


archivesBaseName = 'metabus-splitter'
apply plugin: 'com.github.johnrengelman.shadow'


task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}
