AWSTemplateFormatVersion: 2010-09-09
Description: CD pipeline for my Lambda project


Parameters:
    
  ApplicationName:
    Description: This will be used to name the pipeline and build resources
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: MetabusSplitter
    
  ArtifactsBucket:
    Description: An existing S3 bucket within this AWS account
    Type: String
    Default: midas-lambda-project-artifacts

  GitHubOAuthToken:
    Description: Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens
    Type: String

  GitHubUser:
    Description: Enter GitHub username of the repository owner
    Type: String

  GitHubRepository:
    Description: Enter the repository name that should be monitored for changes
    Type: String
    Default: https://github.com/chusmc/aws-lambda-kotlin-2.git

  GitHubBranch:
    Description: Enter the GitHub branch to monitored
    Type: String
    Default: master

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
        default: Application Configuration
        Parameters:
          - ApplicationName
          - ArtifactsBucket
      - Label:
        default: GitHub Configuration
        Parameters:
          - GitHubOAuthToken
          - GitHubUser
          - GitHubRepository
          - GitHubBranch

    ParameterLabels:
      ApplicationName:
        default: Application Name
      ArtifactsBucket:
        default: CodePipeline S3 Bucket
      GitHubRepository:
        default: Repository Name
      GitHubUser:
        default: Repository Owner
      GitHubBranch:
        default: Repository Branch
      GitHubOAuthToken:
        default: OAuth2 Token


Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline

    Properties:
      Name: !Ref ApplicationName
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -  Name: Source
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
        - Name: PipelineDeploy
          Actions:
            - Name: CreateUpdatePipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Ref AWS::StackName
                TemplatePath: SourceOutput::infrastructure/pipeline.yml
              InputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: BuildAndTest
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ApplicationName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
        - Name: LambdaDeploy
          Actions:
            - Name: CreateUpdateLambda
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub '${ApplicationName}-app'
                TemplatePath: SourceOutput::infrastructure/lambda.yml
                ParameterOverrides: '{"DeploymentPackageKey": {"Fn::GetArtifactAtt": ["BuildOutput", "ObjectKey"]}}'
              InputArtifacts:
                - Name: SourceOutput
                - Name: BuildOutput

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CloudFormationRole
    Properties:
      Name: !Sub '${ApplicationName}'
      Description: !Sub Build project for ${ApplicationName}
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/openjdk-8
        Type: LINUX_CONTAINER
      Artifacts:
        Name: !Ref ApplicationName
        Type: CODEPIPELINE
      TimeoutInMinutes: 5 # must be between 5 minutes and 8 hours


  CodeBuildRole:
    Type: AWS::IAM::Role
    DependsOn: CloudFormationRole
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: ServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchWriteLogsPolicy
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Sid: CodeCommitPullPolicy
                Effect: Allow
                Action:
                  - codecommit:GitPull
                Resource: '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - s3:PutObject
                Resource: '*'

  CodePipelineRole:
    Type: AWS::IAM::Role
    DependsOn: CloudFormationRole
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - cloudformation.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess





Outputs:

    CodePipelineURL:
        Description: The URL for the created pipeline
        Value: !Sub https://${AWS::Region}.console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${ApplicationName}

    CodeDeployApplication:
        Description: The CodeDeploy application used across all environments
        Value: !Ref CodeDeployApplication
        Export:
            Name: !Sub CodeDeployApplication-${ApplicationName}

    CodeDeployServiceRoleArn:
        Description: The CodeDeploy service role used across all environments
        Value: !GetAtt CodeDeployServiceRole.Arn
        Export:
            Name: !Sub CodeDeployServiceRoleArn-${ApplicationName}

